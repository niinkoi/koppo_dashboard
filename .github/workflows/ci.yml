name: Continuous Integration

on: [ push ]
jobs:
  ci-cd:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_PASSWORD: 3141592654
          MYSQL_ROOT_HOST: '172.18.0.1'
        ports:
          - 3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Ruby 3.0.3p157
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.0.3

      - uses: actions/cache@v3
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      - name: Verify Mysql connection from host
        run: |
          sudo apt-get install -y mysql-client libmysqlclient-dev
          mysql --host 127.0.0.1 --port ${{ job.services.mysql.ports[3306] }} -uroot -proot -e "SHOW GRANTS FOR 'root'@'localhost'"
          mysql_tzinfo_to_sql /usr/share/zoneinfo | mysql --host 127.0.0.1 --port ${{ job.services.mysql.ports[3306] }} -uroot -proot mysql

      - name: Bundle install and create db
        env:
          RAILS_ENV: test
          DB_PASSWORD: root
          DB_PORT: ${{ job.services.mysql.ports[3306] }}
        run: |
          export MYSQL_USER="root"
          export MYSQL_ROOT_PASSWORD="root"
          gem install bundler -v $(tail -n1 Gemfile.lock)
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3 --path vendor/bundle
          chmod u+x bin/rails
          sudo service mysql restart
          bin/rails db:prepare

      - name: Lint Backend
        run: |
          gem install rubocop
          gem install bundler -v $(tail -n1 Gemfile.lock)
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3 --path vendor/bundle
          chmod u+x bin/rails
          rubocop
      - name: Lint Frontend
        run: |
          cd frontend
          npm i --force
          npm i --global tslint --force
          npm link tslint --force
          npm run lint
